// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique

  File File[]
  Note Note[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id  String @id @default(cuid())
  name String
  
  uploadStatus UploadStatus @default(PENDING)
  url String
  key String

  User User? @relation(fields: [userId], references: [id])
  userId Int

  Note Note[]

  createdAt DateTime @default(now())
  upadtedAt DateTime @updatedAt
}

model Note {
  id String @id @default(cuid())
  content String

  File File? @relation(fields: [fileId], references: [id])
  fileId String

  User User? @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  upadtedAt DateTime @updatedAt
}
